module.exports = {
    env: {
        es2021: true,
        node: true,
        jest: true
    },
    //extends: "eslint:recommended",
    globals: {
        matchSchema: "readonly",
        log: "readonly"
    },
    parser: "@typescript-eslint/parser",
    parserOptions: { project: "./tsconfig.json" },
    plugins: ["@typescript-eslint"],
    rules: {
        // from TSLint
        "@typescript-eslint/no-floating-promises": "off",
        "quotes": ["off"],
        "semi": ["error","always"],
        "linebreak-style": ["error", "unix"],
        "keyword-spacing": ["error", { before: true, after: true }],
        "object-curly-spacing": ["error", "always"],
        //recommended
        "array-callback-return": "error",
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "off",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-condition": "error", // ["error", { "checkLoops": false }]
        "no-constructor-return": "warn",
        "no-control-regex": "error",
        "no-debugger": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "warn",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": "warn",
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-promise-executor-return": "warn", //return resolve va bene, nel caso disattiviamo
        "no-prototype-builtins": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unexpected-multiline": "warn", //non ne son sicuro
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "error",
        "no-unreachable-loop": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",  //cool https://eslint.org/docs/rules/no-unsafe-negation
        "no-unsafe-optional-chaining": "error",
        "no-unused-private-class-members": "error",
        //TODO: This can be used
        // "no-unused-vars": ["error", { "vars": "all", "args": "none" }],
        "no-use-before-define": "error",
        "no-useless-backreference": "error",
        "require-atomic-updates": ["error", { "allowProperties": true }],
        "use-isnan": "error",
        "valid-typeof": "error",
        //suggestions
        "accessor-pairs": "warn",
        "arrow-body-style": ["error", "as-needed"],
        "block-scoped-var": "error",
        "camelcase": ["error", {
            "properties": "always",
            "ignoreDestructuring": false,
            "ignoreImports": false,
            "ignoreGlobals": false
        }],
        "capitalized-comments": "off",
        "class-methods-use-this": "off",
        "complexity": ["error", 18],
        //"consistent-return": ["error", { "treatUndefinedAsUnspecified": true }],
        "consistent-this": ["error", "that"],
        //"curly": ["error", "never"],
        "default-case": "error",
        "default-case-last": "error",
        "default-param-last": "warn",
        "dot-notation": ["off"],
        "eqeqeq": ["off"],
        "func-name-matching": ["off"],
        "func-names": ["error", "never"],
        "func-style": ["warn", "expression"],
        "grouped-accessor-pairs": ["error", "getBeforeSet"],
        "guard-for-in": "error",
        "id-blacklist": "off",
        //TODO: This can be used
        // "id-length": ["error", { "min": 1, "max": 30 }],
        "id-match": "off",
        "init-declarations": "off",
        "max-classes-per-file": ["off"],
        "max-depth": ["error", 4],
        "max-len": ["warn", {
            "code": 200,
            "tabWidth": 4,
            "ignoreComments": true
        }],
        //This should be used
        // "max-lines-per-function": ["warn", {
        //     "max": 45,
        //     "skipBlankLines": false,
        //     "skipComments": false,
        //     "IIFEs": true
        // }],
        "max-nested-callbacks": ["error", 3],
        "max-params": ["warn", 5],
        //This should be used
        // "max-statements": ["error", 30],
        //"multiline-comment-style": ["error", "separate-lines"],
        "new-cap": ["error", { "capIsNew": false }],
        "no-alert": "error",    
        "no-array-constructor": "error",
        "no-bitwise": "warn",
        "no-caller": "error",
        "no-case-declarations": "error",
        //"no-confusing-arrow": "error",
        //This can be used, but it seems useless
        // "no-console": "warn",
        //"no-continue": "off",
        "no-delete-var": "error",
        //"no-div-regex": "error",
        "no-else-return": ["error", {
            "allowElseIf": false
        }],
        "no-empty": "error",
        //"no-empty-function": "error",
        //"no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-extra-semi": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        //"no-inline-comments": "error",
        "no-invalid-this": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "warn",
        //"no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        //"no-magic-numbers": "error",
        "no-mixed-operators": "error",
        "no-multi-assign": "error",
        //"no-multi-str": "error",
        //This can be used
        // "no-negated-condition": "error",
        //"no-nested-ternary": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "error",
        "no-new-wrappers": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        //This should be used
        // "no-param-reassign": "error",
        //"no-plusplus": "warn",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        //"no-restricted-exports": "error",
        //"no-restricted-globals": "error",
        //"no-restricted-imports": "error",
        //"no-restricted-properties": "error",
        //"no-restricted-syntax": "error",
        "no-return-assign": "error",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-sequences": "error",
        //"no-shadow": "error",
        "no-shadow-restricted-names": "error",
        //"no-ternary": "off",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-undefined": "off",
        //"no-underscore-dangle": "off",
        "no-unneeded-ternary": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-useless-call": "error",
        //TODO: This can be used
        // "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "error",
        "no-useless-return": "error",
        "no-var": "error",
        "no-void": "error",
        //"no-warning-comments": "warn",
        "no-with": "error",
        "object-shorthand": "error",
        "one-var-declaration-per-line": "error",
        "operator-assignment": ["error", "always"],
        "prefer-arrow-callback": "error",
        "prefer-const": ["error", {
            "destructuring": "any"
        }],
        //"prefer-destructuring": "warn",
        "prefer-exponentiation-operator": "error",
        "prefer-named-capture-group": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "error",
        //"prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "quote-props": ["error", "as-needed"],
        "radix": "error",
        "require-await": "error",
        "require-unicode-regexp": "error",
        "require-yield": "error",
        //"sort-imports": "off",
        //"sort-keys": "error",
        //"sort-vars": "error",
        //"spaced-comment": ["error"],
        //"strict": ["error", "global"],
        "symbol-description": "error",
        "vars-on-top": "error",
        "yoda": "error"
        //"array-bracket-newline": ["warn", { multiline: true }],
        // "no-unused-labels": "error",
        // "no-regex-spaces": "error",
        // "no-setter-return": "error",
        // "no-sparse-arrays": "error",
        // "no-template-curly-in-string": "error",
        // "no-unexpected-multiline": "error",
        // "no-unreachable": "error",
        // "no-unsafe-finally": "error",
        // "no-unsafe-negation": "error",
        // "no-unused-labels": "error",
        // "no-useless-computed-key": "error",
        // "no-useless-concat": "error",
        // "no-useless-constructor": "error",
        // "no-useless-escape": "error",
        // "no-useless-rename": "error",
        // "no-with": "error",
        // "require-yield": "error",
        // "rest-spread-spacing": ["error", "never"],
        // "sort-imports": "off",
        // "symbol-description": "error",
        // "template-curly-spacing": ["error", "never"],
        // "yield-star-spacing": ["error", "after"],
        // "yoda": ["error", "never"],
        // "no-extra-boolean-cast": "error",
        // "no-extra-semi": "error",
        // "no-func-assign": "error",
    },
    ignorePatterns: [
        "node_modules/",
        "coverage",
        "jest.config.js"
    ],
};